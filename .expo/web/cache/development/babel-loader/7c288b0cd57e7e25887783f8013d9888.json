{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Reva\\\\Major Project\\\\peteria002\\\\screen\\\\notification.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport firebase from 'firebase';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    screenWidth = _Dimensions$get.width,\n    screenHeight = _Dimensions$get.height;\n\nvar darkgreencolor = '#00b020';\nvar lightgreencolor = '#57FF89';\nexport default function NotificationScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([\"\"]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var myMessages = firebase.database().ref(\"notifications\");\n  React.useEffect(function () {\n    myMessages.set([\"Welcome to pateriaðŸ˜‰\", \"HOpe u are doing wellðŸ˜‰\", \"Welcome to pateriaðŸ˜‰\", \"HOpe u are doing wellðŸ˜‰\", \"Welcome to pateriaðŸ˜‰\", \"HOpe u are doing wellðŸ˜‰\", \"Welcome to pateriaðŸ˜‰\", \"HOpe u are doing wellðŸ˜‰\", \"Welcome to pateriaðŸ˜‰\", \"HOpe u are doing wellðŸ˜‰\", \"Welcome to pateriaðŸ˜‰\", \"HOpe u are doing wellðŸ˜‰\", \"Welcome to pateriaðŸ˜‰\", \"HOpe u are doing wellðŸ˜‰\", \"Welcome to pateriaðŸ˜‰\"]);\n    myMessages.on(\"value\", function (datasnap) {\n      console.log(Object.values(datasnap.val()));\n      setMessages(Object.values(datasnap.val()));\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.headerItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Updates\")), React.createElement(View, {\n    style: styles.headerItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Messages\")), React.createElement(View, {\n    style: styles.headerItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"App Notifications\"))), React.createElement(ScrollView, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, messages.map(function (message, index) {\n    return React.createElement(View, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: styles.body,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.messageItemOutLine,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.messageItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }\n    }, console.log(message), React.createElement(Text, {\n      style: styles.messageText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, message)))), React.createElement(View, {\n      style: {\n        borderBottomColor: lightgreencolor,\n        borderBottomWidth: \"2px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }));\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    height: \"50px\",\n    backgroundColor: lightgreencolor,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    borderBottomColor: darkgreencolor,\n    borderBottomWidth: \"3px\"\n  },\n  body: {\n    padding: \"3px\"\n  },\n  headerItem: {\n    margin: \"5px\",\n    width: screenWidth / 3.3,\n    backgroundColor: darkgreencolor,\n    borderRadius: \"6px\",\n    justifyContent: \"center\",\n    alignItems: 'center'\n  },\n  headerText: {\n    color: \"#fff\"\n  },\n  messageItemOutLine: {\n    margin: \"10px\",\n    borderColor: darkgreencolor,\n    borderWidth: \"2px\",\n    borderRadius: \"7px\"\n  },\n  messageItem: {\n    borderColor: lightgreencolor,\n    backgroundColor: darkgreencolor,\n    borderWidth: \"2px\",\n    borderRadius: \"7px\",\n    padding: \"8px\"\n  },\n  messageText: {\n    color: \"#fff\"\n  }\n});","map":{"version":3,"sources":["D:/Reva/Major Project/peteria002/screen/notification.js"],"names":["React","useState","firebase","Dimensions","get","screenWidth","width","screenHeight","height","darkgreencolor","lightgreencolor","NotificationScreen","navigation","messages","setMessages","myMessages","database","ref","useEffect","set","on","datasnap","console","log","Object","values","val","styles","container","header","headerItem","headerText","body","map","message","index","messageItemOutLine","messageItem","messageText","borderBottomColor","borderBottomWidth","StyleSheet","create","flex","backgroundColor","flexDirection","justifyContent","padding","margin","borderRadius","alignItems","color","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text,Image, View,ScrollView, TextInput, FlatList, TouchableOpacity,Dimensions  } from 'react-native';\r\n\r\n\r\nimport firebase from 'firebase';\r\n\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get('window');\r\n\r\n\r\nconst darkgreencolor = '#00b020';\r\nconst lightgreencolor = '#57FF89';\r\n\r\nexport default function NotificationScreen({navigation}) {\r\n  const [messages,setMessages] = useState([\"\"]);\r\n\r\n  const myMessages = firebase.database().ref(\"notifications\");\r\n\r\n  React.useEffect(() => {\r\n    \r\n      myMessages.set([\r\n          \"Welcome to pateriaðŸ˜‰\",\r\n        \"HOpe u are doing wellðŸ˜‰\",\r\n        \"Welcome to pateriaðŸ˜‰\",\r\n        \"HOpe u are doing wellðŸ˜‰\",\r\n        \"Welcome to pateriaðŸ˜‰\",\r\n        \"HOpe u are doing wellðŸ˜‰\",\r\n        \"Welcome to pateriaðŸ˜‰\",\r\n        \"HOpe u are doing wellðŸ˜‰\",\r\n        \"Welcome to pateriaðŸ˜‰\",\r\n        \"HOpe u are doing wellðŸ˜‰\",\r\n        \"Welcome to pateriaðŸ˜‰\",\r\n        \"HOpe u are doing wellðŸ˜‰\",\r\n        \"Welcome to pateriaðŸ˜‰\",\r\n        \"HOpe u are doing wellðŸ˜‰\",\r\n        \"Welcome to pateriaðŸ˜‰\",\r\n      ])\r\n\r\n\r\n      // To retrieve data\r\n      myMessages.on(\"value\",datasnap => {\r\n        console.log(Object.values(datasnap.val()))\r\n        setMessages(Object.values(datasnap.val()));\r\n      })\r\n    \r\n  },[]);\r\n  \r\n    return (\r\n\r\n      <View style={styles.container}>\r\n        \r\n        <View style={styles.header}>\r\n          <View style={styles.headerItem}>\r\n            <Text style={styles.headerText}>Updates</Text>\r\n          </View>\r\n          <View style={styles.headerItem}>\r\n            <Text style={styles.headerText}>Messages</Text>\r\n          </View>\r\n          <View style={styles.headerItem}>\r\n            <Text style={styles.headerText}>App Notifications</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <ScrollView style={styles.body}>\r\n          {\r\n            messages.map((message,index) => (\r\n              <View key={index}>\r\n                <View style={styles.body}>\r\n                  <View style={styles.messageItemOutLine}>\r\n                      <View style={styles.messageItem}>\r\n                        {console.log(message)}\r\n                        <Text style={styles.messageText}>{message}</Text>\r\n                      </View>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{borderBottomColor:lightgreencolor,borderBottomWidth:\"2px\"}}></View>\r\n              </View>\r\n            ))\r\n          } \r\n      </ScrollView>\r\n\r\n      </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container:{\r\n    flex:1,\r\n  },\r\n\r\n  header:{\r\n    height:\"50px\",\r\n    backgroundColor:lightgreencolor,\r\n    flexDirection:\"row\",\r\n    justifyContent:\"space-around\",\r\n    borderBottomColor:darkgreencolor,\r\n    borderBottomWidth:\"3px\",\r\n  },\r\n  body:{\r\n    padding:\"3px\",\r\n  },\r\n  \r\n  headerItem:{\r\n    margin:\"5px\",\r\n    width: screenWidth/3.3,\r\n    backgroundColor:darkgreencolor,\r\n    borderRadius:\"6px\",\r\n    justifyContent:\"center\",\r\n    alignItems: 'center',\r\n  },\r\n  headerText:{\r\n    color:\"#fff\",\r\n  },\r\n\r\n  messageItemOutLine:{\r\n    margin:\"10px\",\r\n    borderColor:darkgreencolor,\r\n    borderWidth:\"2px\",\r\n    borderRadius:\"7px\"\r\n  },\r\n  messageItem:{\r\n    borderColor:lightgreencolor,\r\n    backgroundColor:darkgreencolor,\r\n    borderWidth:\"2px\",\r\n    borderRadius:\"7px\",\r\n    padding:\"8px\",\r\n  },\r\n  messageText:{\r\n    color:\"#fff\",\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}