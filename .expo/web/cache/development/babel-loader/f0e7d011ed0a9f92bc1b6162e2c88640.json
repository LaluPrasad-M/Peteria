{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Reva\\\\Major Project\\\\peteria002\\\\screen\\\\PetsDetails.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport firebase from 'firebase';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    screenWidth = _Dimensions$get.width;\n\nvar imageWidth = screenWidth - 20;\nvar imageHeight = imageWidth * .8;\nexport default function PetDetailsScreen() {\n  var DetailsScreen = firebase.database().ref(\"DetailsScreen\");\n\n  var _React$useState = React.useState({\n    id: \"Loading\",\n    type: \"Loading\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      details = _React$useState2[0],\n      setDetails = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"Loading\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      data = _React$useState4[0],\n      setData = _React$useState4[1];\n\n  React.useEffect(function () {\n    DetailsScreen.on(\"value\", function (detailsSnap) {\n      setDetails(detailsSnap.val());\n      var Data = firebase.database().ref(detailsSnap.val().type);\n      Data.on(\"value\", function (data) {\n        var dataVal = Object.values(data.val()).filter(function (element) {\n          return element.id === detailsSnap.val().id;\n        });\n        setData(dataVal[0]);\n      });\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: data.imageUri\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, data.name)));\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: \"10px\",\n    justifyContent: \"center\"\n  },\n  header: {},\n  name: {\n    top: -50,\n    backgroundColor: \"#fff\",\n    borderRadius: \"15px\",\n    padding: '10px',\n    justifyContent: \"center\"\n  },\n  image: {\n    width: imageWidth,\n    height: imageHeight,\n    borderRadius: \"10px\"\n  }\n});","map":{"version":3,"sources":["D:/Reva/Major Project/peteria002/screen/PetsDetails.js"],"names":["React","useState","firebase","Dimensions","get","screenWidth","width","imageWidth","imageHeight","PetDetailsScreen","DetailsScreen","database","ref","id","type","details","setDetails","data","setData","useEffect","on","detailsSnap","val","Data","dataVal","Object","values","filter","element","styles","container","image","uri","imageUri","name","StyleSheet","create","padding","justifyContent","header","top","backgroundColor","borderRadius","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text,Image, View,ScrollView, TextInput, FlatList, TouchableOpacity,Dimensions  } from 'react-native';\r\n\r\nimport firebase from 'firebase';\r\n\r\n\r\nconst { width: screenWidth} = Dimensions.get('window')\r\n\r\nconst imageWidth = screenWidth-20;\r\nconst imageHeight = imageWidth*.8;\r\n\r\n\r\nexport default function PetDetailsScreen() {\r\n    // const { itemId, otherParam } = route.params;\r\n    const DetailsScreen = firebase.database().ref(\"DetailsScreen\");\r\n    const [details,setDetails] = React.useState({\r\n        id:\"Loading\",\r\n        type:\"Loading\"\r\n    });\r\n\r\n    const [data,setData] = React.useState(\"Loading\")\r\n    \r\n    React.useEffect(() => {\r\n        DetailsScreen.on(\"value\",detailsSnap => {\r\n            setDetails(detailsSnap.val());\r\n            const Data = firebase.database().ref(detailsSnap.val().type);\r\n            Data.on(\"value\",data => {\r\n                var dataVal = Object.values(data.val()).filter(function (element){\r\n                    return element.id === detailsSnap.val().id;\r\n                });                \r\n                setData(dataVal[0]);\r\n            })\r\n        })  \r\n    },[]);\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n            <Image \r\n                style = {styles.image}\r\n                source={{uri:data.imageUri}}\r\n            />\r\n            <View style={styles.name}>\r\n                <Text>{data.name}</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\n\r\nconst styles= StyleSheet.create({\r\n    container:{\r\n        padding:\"10px\",\r\n        justifyContent:\"center\",\r\n    },\r\n    header:{\r\n\r\n    },\r\n    name:{\r\n        top:-50,\r\n        backgroundColor:\"#fff\",\r\n        borderRadius:\"15px\",\r\n        padding:'10px',\r\n        justifyContent:\"center\",\r\n    },\r\n    image:{\r\n        width:imageWidth,\r\n        height:imageHeight,\r\n        borderRadius:\"10px\",\r\n    },\r\n\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}