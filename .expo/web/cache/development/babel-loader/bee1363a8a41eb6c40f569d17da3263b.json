{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Reva\\\\Major Project\\\\peteria002\\\\screen\\\\HeaderData.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport firebase from 'firebase';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    screenWidth = _Dimensions$get.width;\n\nvar imageWidth = screenWidth * .25;\nvar imageHeight = imageWidth * .8;\nexport default function PetDetailsScreen() {\n  var _this = this;\n\n  var DetailsScreen = firebase.database().ref(\"DetailsScreen\");\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  React.useEffect(function () {\n    DetailsScreen.on(\"value\", function (dataSnap) {\n      var dataSnapVal = dataSnap.val();\n      var Data = firebase.database().ref(dataSnapVal.id);\n      Data.on(\"value\", function (dataSnapshot) {\n        var data = dataSnapshot.val();\n        setData(data);\n      });\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    horizontal: true,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    showsHorizontalScrollIndicator: true,\n    data: data,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return pressHandler(item.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 20\n        }\n      }, React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          alignContent: \"space-between\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.imageUri\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }\n      }, item.name)), React.createElement(View, {\n        style: {\n          borderBottomColor: \"#000\",\n          borderBottomWidth: \"2px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }\n      })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: \"10px\"\n  },\n  image: {\n    borderRadius: \"10px\",\n    width: imageWidth,\n    height: imageHeight,\n    margin: \"2px\"\n  },\n  shadow: {\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowRadius: \"10px\",\n    shadowOpacity: 1.0\n  },\n  name: {\n    top: -30,\n    backgroundColor: \"#fff\",\n    borderRadius: \"30px\",\n    height: '40px',\n    width: \"250px\",\n    margin: \"3px\",\n    justifyContent: \"center\",\n    alignContent: \"center\"\n  },\n  nameTag: {\n    alignSelf: \"center\",\n    fontWeight: \"bold\",\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["D:/Reva/Major Project/peteria002/screen/HeaderData.js"],"names":["React","useState","firebase","Icon","Dimensions","get","screenWidth","width","imageWidth","imageHeight","PetDetailsScreen","DetailsScreen","database","ref","data","setData","useEffect","on","dataSnap","dataSnapVal","val","Data","id","dataSnapshot","styles","container","item","index","toString","pressHandler","flexDirection","alignContent","image","uri","imageUri","fontWeight","name","borderBottomColor","borderBottomWidth","StyleSheet","create","padding","borderRadius","height","margin","shadow","shadowColor","shadowOffset","shadowRadius","shadowOpacity","top","backgroundColor","justifyContent","nameTag","alignSelf","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;;;AAGA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,IAAP;;sBAE8BC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAfC,W,mBAAPC,K;;AAER,IAAMC,UAAU,GAAGF,WAAW,GAAC,GAA/B;AACA,IAAMG,WAAW,GAAGD,UAAU,GAAC,EAA/B;AAGA,eAAe,SAASE,gBAAT,GAA4B;AAAA;;AACvC,MAAMC,aAAa,GAAGT,QAAQ,CAACU,QAAT,GAAoBC,GAApB,CAAwB,eAAxB,CAAtB;;AADuC,wBAGhBb,KAAK,CAACC,QAAN,CAAe,EAAf,CAHgB;AAAA;AAAA,MAGhCa,IAHgC;AAAA,MAG3BC,OAH2B;;AAMvCf,EAAAA,KAAK,CAACgB,SAAN,CAAgB,YAAM;AACnBL,IAAAA,aAAa,CAACM,EAAd,CAAiB,OAAjB,EAAyB,UAAAC,QAAQ,EAAI;AACnC,UAAIC,WAAW,GAAGD,QAAQ,CAACE,GAAT,EAAlB;AACA,UAAMC,IAAI,GAAGnB,QAAQ,CAACU,QAAT,GAAoBC,GAApB,CAAwBM,WAAW,CAACG,EAApC,CAAb;AACAD,MAAAA,IAAI,CAACJ,EAAL,CAAQ,OAAR,EAAgB,UAAAM,YAAY,EAAI;AAC5B,YAAIT,IAAI,GAAGS,YAAY,CAACH,GAAb,EAAX;AACAL,QAAAA,OAAO,CAACD,IAAD,CAAP;AACH,OAHD;AAID,KAPD;AAQF,GATD,EASE,EATF;AAWA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAES,oBAAC,QAAD;AACA,IAAA,UAAU,MADV;AAEA,IAAA,YAAY,EAAE,sBAACC,IAAD,EAAOC,KAAP;AAAA,aAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA,KAFd;AAGA,IAAA,8BAA8B,EAAE,IAHhC;AAIA,IAAA,IAAI,EAAId,IAJR;AAKA,IAAA,UAAU,EAAE;AAAA,UAAGY,IAAH,QAAGA,IAAH;AAAA,aACV,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAMG,YAAY,CAACH,IAAI,CAACJ,EAAN,CAAlB;AAAA,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAO,QAAA,KAAK,EAAE;AAACQ,UAAAA,aAAa,EAAC,KAAf;AAAqBC,UAAAA,YAAY,EAAC;AAAlC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,KAAK,EAAEP,MAAM,CAACQ,KADlB;AAEI,QAAA,MAAM,EAAE;AAACC,UAAAA,GAAG,EAACP,IAAI,CAACQ;AAAV,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAC;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCT,IAAI,CAACU,IAAxC,CALJ,CADJ,EAQI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,iBAAiB,EAAC,MAAnB;AAA0BC,UAAAA,iBAAiB,EAAC;AAA5C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,CADL,CADU;AAAA,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFT,CADJ;AAuCH;AAGD,IAAMd,MAAM,GAAEe,UAAU,CAACC,MAAX,CAAkB;AAC5Bf,EAAAA,SAAS,EAAC;AACNgB,IAAAA,OAAO,EAAC;AADF,GADkB;AAK5BT,EAAAA,KAAK,EAAC;AACFU,IAAAA,YAAY,EAAC,MADX;AAEFnC,IAAAA,KAAK,EAACC,UAFJ;AAGFmC,IAAAA,MAAM,EAAClC,WAHL;AAIFmC,IAAAA,MAAM,EAAC;AAJL,GALsB;AAW5BC,EAAAA,MAAM,EAAC;AACHC,IAAAA,WAAW,EAAE,SADV;AAEHC,IAAAA,YAAY,EAAE;AACVxC,MAAAA,KAAK,EAAE,CADG;AAEVoC,MAAAA,MAAM,EAAE;AAFE,KAFX;AAMHK,IAAAA,YAAY,EAAE,MANX;AAOHC,IAAAA,aAAa,EAAE;AAPZ,GAXqB;AAoB5Bb,EAAAA,IAAI,EAAC;AACDc,IAAAA,GAAG,EAAC,CAAC,EADJ;AAEDC,IAAAA,eAAe,EAAC,MAFf;AAGDT,IAAAA,YAAY,EAAC,MAHZ;AAIDC,IAAAA,MAAM,EAAC,MAJN;AAKDpC,IAAAA,KAAK,EAAC,OALL;AAMDqC,IAAAA,MAAM,EAAC,KANN;AAODQ,IAAAA,cAAc,EAAC,QAPd;AAQDrB,IAAAA,YAAY,EAAC;AARZ,GApBuB;AA8B5BsB,EAAAA,OAAO,EAAC;AACJC,IAAAA,SAAS,EAAC,QADN;AAEJnB,IAAAA,UAAU,EAAC,MAFP;AAGJoB,IAAAA,QAAQ,EAAC;AAHL;AA9BoB,CAAlB,CAAd","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text,Image, View,ScrollView, TextInput, FlatList, TouchableOpacity,Dimensions  } from 'react-native';\r\n\r\nimport firebase from 'firebase';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nconst { width: screenWidth} = Dimensions.get('window')\r\n\r\nconst imageWidth = screenWidth*.25;\r\nconst imageHeight = imageWidth*.8;\r\n\r\n\r\nexport default function PetDetailsScreen() {\r\n    const DetailsScreen = firebase.database().ref(\"DetailsScreen\");\r\n \r\n    const [data,setData] = React.useState([])\r\n    \r\n\r\n    React.useEffect(() => {\r\n       DetailsScreen.on(\"value\",dataSnap => {\r\n         var dataSnapVal = dataSnap.val();\r\n         const Data = firebase.database().ref(dataSnapVal.id);\r\n         Data.on(\"value\",dataSnapshot => {\r\n             var data = dataSnapshot.val();\r\n             setData(data);\r\n         })\r\n       });\r\n    },[]);\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n         {      \r\n                 <FlatList \r\n                 horizontal\r\n                 keyExtractor={(item, index) => index.toString()}\r\n                 showsHorizontalScrollIndicator={true}\r\n                 data = {data}\r\n                 renderItem={({ item }) => (\r\n                   <TouchableOpacity onPress={() => pressHandler(item.id)}>\r\n                        <View>\r\n                            <View  style={{flexDirection:\"row\",alignContent:\"space-between\"}}>\r\n                                <Image \r\n                                    style={styles.image}\r\n                                    source={{uri:item.imageUri}}\r\n                                    />\r\n                                <Text style={{fontWeight:'bold'}}>{item.name}</Text>\r\n                            </View>\r\n                            <View style={{borderBottomColor:\"#000\",borderBottomWidth:\"2px\"}}></View>\r\n                        </View>\r\n                   </TouchableOpacity>\r\n                  )}\r\n               /> \r\n\r\n                //   data.map((cartItem,index) => (\r\n                //     <View>\r\n                //         <View  style={{flexDirection:\"row\",alignContent:\"space-between\"}} key={index}>\r\n                //             <Image \r\n                //                 style={styles.image}\r\n                //                 source={{uri:cartItem.imageUri}}\r\n                //                 />\r\n                //             <Text style={{fontWeight:'bold'}}>{cartItem.name}</Text>\r\n                //         </View>\r\n                //         <View style={{borderBottomColor:\"#000\",borderBottomWidth:\"2px\"}}></View>\r\n                //     </View>\r\n                //     ))\r\n          }\r\n        </View>\r\n    );\r\n}\r\n\r\n\r\nconst styles= StyleSheet.create({\r\n    container:{\r\n        padding:\"10px\",\r\n    },\r\n\r\n    image:{\r\n        borderRadius:\"10px\",\r\n        width:imageWidth,\r\n        height:imageHeight,\r\n        margin:\"2px\",\r\n    },\r\n    shadow:{\r\n        shadowColor: '#000000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 3\r\n        },\r\n        shadowRadius: \"10px\",\r\n        shadowOpacity: 1.0,\r\n    },\r\n    name:{\r\n        top:-30,\r\n        backgroundColor:\"#fff\",\r\n        borderRadius:\"30px\",\r\n        height:'40px',\r\n        width:\"250px\",\r\n        margin:\"3px\",\r\n        justifyContent:\"center\",\r\n        alignContent:\"center\",\r\n    },\r\n    nameTag:{\r\n        alignSelf:\"center\",\r\n        fontWeight:\"bold\",\r\n        fontSize:20,\r\n    }\r\n\r\n\r\n});"]},"metadata":{},"sourceType":"module"}