{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Major Project\\\\peteria\\\\routes\\\\RootNav.js\";\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nvar RootStack = createStackNavigator();\nimport DrawerNavigator from \"./DrawerNav\";\nimport SplashScreen from \"../screen/Splash\";\nimport SignInScreen from \"../screen/SignIn\";\nimport SignUpScreen from \"../screen/SignUp\";\nimport { AuthContext } from \"../components/Context\";\nexport default function () {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoading = _React$useState2[0],\n      setIsLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      userToken = _React$useState4[0],\n      setUserToken = _React$useState4[1];\n\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn() {\n        setUserToken(\"asdf\");\n        setIsLoading(false);\n      },\n      signOut: function signOut() {\n        setUserToken(null);\n        setIsLoading(false);\n      },\n      signUp: function signUp() {\n        setUserToken(\"asdf\");\n        setIsLoading(false);\n      }\n    };\n  });\n  React.useEffect(function () {\n    setTimeout(function () {\n      setIsLoading(false);\n    }, 1000);\n  }, []);\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, React.createElement(RootStack.Navigator, {\n    headerMode: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, React.createElement(RootStack.Screen, {\n    name: \"SplashScreen\",\n    component: SplashScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }), React.createElement(RootStack.Screen, {\n    name: \"SignInScreen\",\n    component: SignInScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }), React.createElement(RootStack.Screen, {\n    name: \"SignUpScreen\",\n    component: SignUpScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["D:/Major Project/peteria/routes/RootNav.js"],"names":["React","NavigationContainer","createStackNavigator","RootStack","DrawerNavigator","SplashScreen","SignInScreen","SignUpScreen","AuthContext","useState","isLoading","setIsLoading","userToken","setUserToken","authContext","useMemo","signIn","signOut","signUp","useEffect","setTimeout","flex","justifyContent","alignItems"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;;;AAIA,IAAMC,SAAS,GAAGD,oBAAoB,EAAtC;AAGA,OAAOE,eAAP;AAEA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;AAEA,SAASC,WAAT;AAEA,eAAe,YAAW;AAAA,wBACYR,KAAK,CAACS,QAAN,CAAe,IAAf,CADZ;AAAA;AAAA,MACfC,SADe;AAAA,MACJC,YADI;;AAAA,yBAEYX,KAAK,CAACS,QAAN,CAAe,IAAf,CAFZ;AAAA;AAAA,MAEfG,SAFe;AAAA,MAEJC,YAFI;;AAItB,MAAMC,WAAW,GAAGd,KAAK,CAACe,OAAN,CAAc;AAAA,WAAO;AACrCC,MAAAA,MAAM,EAAE,kBAAM;AACVH,QAAAA,YAAY,CAAC,MAAD,CAAZ;AACAF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,OAJoC;AAKrCM,MAAAA,OAAO,EAAE,mBAAM;AACXJ,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,OARoC;AASrCO,MAAAA,MAAM,EAAE,kBAAM;AACVL,QAAAA,YAAY,CAAC,MAAD,CAAZ;AACAF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AAZoC,KAAP;AAAA,GAAd,CAApB;AAeAX,EAAAA,KAAK,CAACmB,SAAN,CAAgB,YAAM;AAClBC,IAAAA,UAAU,CAAC,YAAM;AACbT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAFS,EAER,IAFQ,CAAV;AAGH,GAJD,EAIG,EAJH;;AAMA,MAAID,SAAJ,EAAe;AACX,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACW,QAAAA,IAAI,EAAC,CAAN;AAASC,QAAAA,cAAc,EAAC,QAAxB;AAAiCC,QAAAA,UAAU,EAAC;AAA5C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AACD,SACI,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD,CAAW,SAAX;AAAqB,IAAA,UAAU,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAC,cAAvB;AAAsC,IAAA,SAAS,EAAElB,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAC,cAAvB;AAAsC,IAAA,SAAS,EAAEC,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAC,cAAvB;AAAsC,IAAA,SAAS,EAAEC,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,CADJ,CADJ;AAWH","sourcesContent":["import * as React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport { View, ActivityIndicator } from 'react-native';\r\n\r\nconst RootStack = createStackNavigator();\r\n\r\n\r\nimport DrawerNavigator from \"./DrawerNav\";\r\n\r\nimport SplashScreen from \"../screen/Splash\";\r\nimport SignInScreen from \"../screen/SignIn\";\r\nimport SignUpScreen from \"../screen/SignUp\";\r\n\r\nimport { AuthContext } from \"../components/Context\";\r\n\r\nexport default function() {\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [userToken, setUserToken] = React.useState(null);\r\n\r\n    const authContext = React.useMemo(() => ({\r\n        signIn: () => {\r\n            setUserToken(\"asdf\");\r\n            setIsLoading(false);\r\n        },\r\n        signOut: () => {\r\n            setUserToken(null);\r\n            setIsLoading(false);\r\n        },\r\n        signUp: () => {\r\n            setUserToken(\"asdf\");\r\n            setIsLoading(false);\r\n        },\r\n    }));\r\n\r\n    React.useEffect(() => {\r\n        setTimeout(() => {\r\n            setIsLoading(false);\r\n        },1000);\r\n    }, []);\r\n\r\n    if( isLoading ){\r\n        return(\r\n            <View style={{flex:1, justifyContent:'center',alignItems:'center'}}>\r\n                <ActivityIndicator size=\"large\"/>\r\n            </View>\r\n        )\r\n    }\r\n    return(\r\n        <AuthContext.Provider>\r\n            <NavigationContainer>\r\n                <RootStack.Navigator headerMode='none'>\r\n                    <RootStack.Screen name=\"SplashScreen\" component={SplashScreen} />\r\n                    <RootStack.Screen name=\"SignInScreen\" component={SignInScreen} />\r\n                    <RootStack.Screen name=\"SignUpScreen\" component={SignUpScreen} />\r\n                </RootStack.Navigator>\r\n            </NavigationContainer>\r\n        </AuthContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}